# config.yml

# Esta seção define o idioma principal do seu assistente.
# Para português, usamos 'pt'.
language: pt

recipe: default.v1
assistant_id: 20230405-114328-tranquil-mustard

# ====================================================================
# Pipeline NLU
# Define os componentes que processam as mensagens do usuário
# para extrair intenções e entidades.
# Removidos LLMCommandGenerator e o LLM do ResponseSelector para estabilidade.
# REMOVIDO TAMBÉM O SentimentAnalyzer para evitar erro de classe não encontrada.
# ====================================================================
pipeline:
  # 1. WhitespaceTokenizer: Divide a mensagem do usuário em tokens (palavras)
  #    com base em espaços em branco.
  - name: WhitespaceTokenizer

  # 2. RegexFeaturizer: Adiciona features baseadas em expressões regulares.
  - name: RegexFeaturizer

  # 3. LexicalSyntacticFeaturizer: Adiciona features baseadas em padrões lexicais
  #    e sintáticos das palavras.
  - name: LexicalSyntacticFeaturizer

  # 4. CountVectorsFeaturizer (para palavras): Cria representações vetoriais.
  - name: CountVectorsFeaturizer
    # Configuração padrão para palavras
    analyzer: word
    min_ngram: 1
    max_ngram: 1 # Geralmente 1 para bag-of-words simples

  # 5. CountVectorsFeaturizer (para caracteres/n-grams): Ajuda com erros de digitação.
  - name: CountVectorsFeaturizer
    analyzer: char_wb # Analisa n-grams de caracteres dentro e entre palavras
    min_ngram: 1     # Tamanho mínimo do n-gram
    max_ngram: 4     # Tamanho máximo do n-gram

  # 6. DIETClassifier: O principal classificador de intenções e extrator de entidades.
  - name: DIETClassifier
    epochs: 100
    constrain_similarities: true

  # 7. EntitySynonymMapper: Mapeia sinônimos de entidades.
  - name: EntitySynonymMapper

  # 8. ResponseSelector: Usado para selecionar respostas para FAQs ou frases fixas.
  #    A configuração de 'llm:' foi REMOVIDA para evitar conflitos de dependência,
  #    já que usaremos uma Custom Action para LLM.
  - name: ResponseSelector
    epochs: 100
    retrieval_intent: faq # Ajuste se você tiver uma intenção diferente para FAQs
    constrain_similarities: true

  # 9. FallbackClassifier: Acionado quando a confiança da intenção é muito baixa.
  - name: FallbackClassifier
    threshold: 0.3          # Limiar de confiança para acionar o fallback
    ambiguity_threshold: 0.1 # Limiar de ambiguidade para acionar o fallback

  # NOTA: O SentimentAnalyzer foi removido daqui para resolver o erro "Can't load class"
  # Se você precisar de análise de sentimento, teremos que instalar um componente
  # externo e configurá-lo corretamente depois.

# ====================================================================
# Políticas de Gerenciamento de Diálogo
# Define como o assistente decide qual ação tomar em seguida.
# ====================================================================
# config.yml (SEÇÃO POLICIES - SUBSTITUA ESTA SEÇÃO)

policies:
  # MemoizationPolicy: Aprende e reproduz diálogos que já viu antes.
  # Essencial para fluxos repetitivos.
  - name: MemoizationPolicy

  # RulePolicy: Permite definir regras explícitas para o comportamento do bot.
  # Essencial para as regras no rules.yml
  - name: RulePolicy
    core_fallback_threshold: 0.3
    nlu_fallback_threshold: 0.3
    enable_fallback_prediction: true

  # TEDPolicy: O principal modelo de diálogo do Rasa que aprende com as histórias.
  # Manter para o aprendizado geral, mas as regras devem ter precedência.
  - name: TEDPolicy
    epochs: 100
    constrain_similarities: true
    max_history: 5 # Ajuste o histórico considerado pela política

  # Removidas temporariamente para depuração:
  # UnexpecTEDIntentionPolicy, AugmentedMemoizationPolicy, FlowPolicy
  # Se o problema for resolvido com esta configuração, iremos adicioná-las de volta
  # uma por uma para identificar a política causadora.
# ====================================================================
# Configurações de Treinamento
# Define parâmetros gerais para o processo de treinamento do modelo.
# ====================================================================
# Permite ao Rasa aumentar a quantidade de dados de treinamento sinteticamente.
augmentation: 50

# Define os critérios de parada precoce para o treinamento dos modelos.
early_stopping:
  patience: 5
  min_delta: 0.001A